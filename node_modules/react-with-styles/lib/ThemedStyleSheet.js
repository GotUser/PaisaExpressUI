Object.defineProperty(exports, "__esModule", {
  value: true
});

var _globalCache = require('global-cache');

var _globalCache2 = _interopRequireDefault(_globalCache);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var styleInterface = void 0;
var styleTheme = void 0;
var makeFromThemes = {};
var internalId = 0;

function registerTheme(theme) {
  styleTheme = {
    theme: theme,
    styles: {}
  };
}

function registerInterface(interfaceToRegister) {
  styleInterface = interfaceToRegister;
}

function create(makeFromTheme) {
  // Get an id to associate with this stylesheet
  var id = internalId;
  internalId += 1;

  var _styleTheme = styleTheme,
      theme = _styleTheme.theme,
      styles = _styleTheme.styles;

  styles[id] = styleInterface.create(makeFromTheme(theme));

  makeFromThemes[id] = makeFromTheme;

  return function () {
    return styleTheme.styles[id];
  };
}

function get() {
  return styleTheme.theme;
}

function resolve() {
  for (var _len = arguments.length, styles = Array(_len), _key = 0; _key < _len; _key++) {
    styles[_key] = arguments[_key];
  }

  return styleInterface.resolve(styles);
}

function resolveNoRTL() {
  for (var _len2 = arguments.length, styles = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    styles[_key2] = arguments[_key2];
  }

  if (styleInterface.resolveNoRTL) {
    return styleInterface.resolveNoRTL(styles);
  }

  return resolve(styles);
}

function flush() {
  if (styleInterface.flush) {
    styleInterface.flush();
  }
}

// Using globalCache in order to export a singleton. This file may be imported
// in several places, which otherwise stomps over any registered themes and
// resets to just the defaults.
exports['default'] = _globalCache2['default'].setIfMissingThenGet('react-with-styles ThemedStyleSheet', function () {
  return {
    registerTheme: registerTheme,
    registerInterface: registerInterface,
    create: create,
    get: get,
    resolveNoRTL: resolveNoRTL,
    resolve: resolve,
    flush: flush
  };
});