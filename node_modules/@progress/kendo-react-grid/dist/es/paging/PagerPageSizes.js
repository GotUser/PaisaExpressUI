var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';
import { messages, pagerItemPerPage } from './../messages';
/**
 * @hidden
 */
var PagerPageSizes = /** @class */ (function (_super) {
    __extends(PagerPageSizes, _super);
    function PagerPageSizes() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pageSizeChange = function (e) {
            if (_this.props.pageChange) {
                _this.props.pageChange({ skip: 0, take: parseInt(e.target.value, 10) }, e);
            }
        };
        return _this;
    }
    PagerPageSizes.prototype.render = function () {
        var _this = this;
        var sizes = this.props.pageSizes.slice();
        if (sizes.filter(function (s) { return s === _this.props.pageSize; }).length === 0) {
            sizes.unshift(this.props.pageSize);
        }
        return (React.createElement("label", { className: "k-pager-sizes k-label" },
            React.createElement("select", { value: this.props.pageSize, onChange: this.pageSizeChange }, sizes.map(function (value, index) {
                return React.createElement("option", { key: index, value: value },
                    " ",
                    value,
                    " ");
            })),
            provideLocalizationService(this).toLanguageString(pagerItemPerPage, messages[pagerItemPerPage])));
    };
    return PagerPageSizes;
}(React.Component));
export { PagerPageSizes };
registerForLocalization(PagerPageSizes);
//# sourceMappingURL=PagerPageSizes.js.map