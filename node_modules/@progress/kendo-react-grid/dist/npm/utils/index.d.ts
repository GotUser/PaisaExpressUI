/**
 * @hidden
 */
export declare function getNestedValue(fieldName: string | undefined, dataItem: any): any;
/**
 * @hidden
 */
export interface DataItemWrapper {
    dataItem: any;
    rowType: GridRowType;
    level: number;
    expanded: boolean;
    dataIndex: number;
}
/**
 * @hidden
 */
export declare function flatData(output: Array<DataItemWrapper>, input: Array<any>, footer: 'always' | 'visible' | 'none', dataIndex: {
    index: number;
}, groupDefined: boolean, field?: string, level?: number): number;
/**
 * @hidden
 */
export declare function getIndex(event: any, parent: HTMLTableRowElement | HTMLDivElement | null): number;
/**
 * @hidden
 */
export declare function checkPropCompatibility(props: GridProps): void;
/**
 * @hidden
 */
export declare function mapColumns(columns: ExtendedColumnProps[]): number[][];
import * as React from 'react';
import { GridProps } from '../interfaces/GridProps';
import { ExtendedColumnProps } from '../GridColumn';
import { DataResult, GroupDescriptor } from '@progress/kendo-data-query';
import { GridRowType } from '../interfaces/GridRowType';
import { GridColumnProps } from '../interfaces/GridColumnProps';
/**
 * @hidden
 */
export declare function readColumns(elements: (React.ReactChild | GridColumnProps)[], oldColumns: GridColumnProps[], depth?: number): ExtendedColumnProps[];
/**
 * @hidden
 */
export declare function autoGenerateColumns(data: any[] | DataResult | null | undefined, group: GroupDescriptor[] | undefined, expandField: string | undefined): ExtendedColumnProps[];
