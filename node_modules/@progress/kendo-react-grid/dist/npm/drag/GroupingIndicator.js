"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_draggable_1 = require("@telerik/kendo-draggable");
/**
 * @hidden
 */
var GroupingIndicator = /** @class */ (function (_super) {
    __extends(GroupingIndicator, _super);
    function GroupingIndicator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.element = null;
        _this.draggable = new kendo_draggable_1.default({
            press: function (e) { if (_this.element && _this.props.onPress) {
                _this.props.onPress(e, _this.element);
            } },
            drag: function (e) { if (_this.element && _this.props.onDrag) {
                _this.props.onDrag(e, _this.element);
            } },
            release: function (e) { if (_this.element && _this.props.onRelease) {
                _this.props.onRelease(e);
            } }
        });
        _this.sortChange = function (event) {
            event.preventDefault();
            if (_this.props.onSortChange) {
                var sort = (_this.props.dir === 'asc') ? 'desc' : 'asc';
                _this.props.onSortChange(event, sort);
            }
        };
        _this.groupRemove = function (event) {
            event.preventDefault();
            if (_this.props.onRemove) {
                _this.props.onRemove(event);
            }
        };
        return _this;
    }
    GroupingIndicator.prototype.componentDidMount = function () {
        if (this.element === null) {
            return;
        }
        this.draggable.bindTo(this.element);
    };
    GroupingIndicator.prototype.componentWillUnmount = function () {
        this.draggable.destroy();
    };
    GroupingIndicator.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { className: "k-indicator-container", ref: function (div) { _this.element = div; } },
            React.createElement("div", { className: "k-group-indicator" },
                React.createElement("a", { className: "k-link", href: "#", tabIndex: -1, onClick: this.sortChange },
                    React.createElement("span", { className: 'k-icon k-i-sort-' + this.props.dir + '-sm' }),
                    this.props.title),
                React.createElement("a", { className: "k-button k-button-icon k-bare", tabIndex: -1, onClick: this.groupRemove },
                    React.createElement("span", { className: "k-icon k-i-group-delete" })))));
    };
    return GroupingIndicator;
}(React.Component));
exports.GroupingIndicator = GroupingIndicator;
//# sourceMappingURL=GroupingIndicator.js.map