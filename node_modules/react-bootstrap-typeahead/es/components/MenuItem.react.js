import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import menuItemContainer from '../containers/menuItemContainer';
import { noop } from '../utils';
var propTypes = {
  onClick: PropTypes.func
};
var defaultProps = {
  onClick: noop
};
export var BaseMenuItem =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(BaseMenuItem, _React$Component);

  function BaseMenuItem() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "_handleClick", function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onClick = _this$props.onClick;
      e.preventDefault();
      !disabled && onClick(e);
    });

    return _this;
  }

  var _proto = BaseMenuItem.prototype;

  _proto.render = function render() {
    var _this$props2 = this.props,
        active = _this$props2.active,
        children = _this$props2.children,
        className = _this$props2.className,
        disabled = _this$props2.disabled,
        onClick = _this$props2.onClick,
        onMouseDown = _this$props2.onMouseDown,
        props = _objectWithoutPropertiesLoose(_this$props2, ["active", "children", "className", "disabled", "onClick", "onMouseDown"]);

    var conditionalClassNames = {
      active: active,
      disabled: disabled
    };
    return (
      /* eslint-disable jsx-a11y/anchor-is-valid */
      React.createElement("li", _extends({}, props, {
        className: cx(conditionalClassNames, className)
      }), React.createElement("a", {
        className: cx('dropdown-item', conditionalClassNames),
        href: "#",
        onClick: this._handleClick,
        onMouseDown: onMouseDown
      }, children))
      /* eslint-enable jsx-a11y/anchor-is-valid */

    );
  };

  return BaseMenuItem;
}(React.Component);

_defineProperty(BaseMenuItem, "propTypes", propTypes);

_defineProperty(BaseMenuItem, "defaultProps", defaultProps);

export default menuItemContainer(BaseMenuItem);